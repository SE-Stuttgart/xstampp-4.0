{
	"info": {
		"_postman_id": "01160490-cac3-4173-bfeb-7cb4f35ffa94",
		"name": "xstampp4_1-API",
		"description": "base url is: `http://localhost:80/`\n\n\n- to execute the requests, **valid user-or project-token** is neccessary for Authorization, which you can receive via **login** and performing the **get project-token request**\n- project-token expire quickly, its recommended to createa pre-set in the variables for efficency with an environment that contains mentioned variables\n- **valid ids** to fill in the **{{variables}}** in the urls\n- one has to perform a specific order to execute certain requests, like needing to create a loss before linking it\n- if there is no correct Authorization, one will get a Status: `401(Unauthorized)`\n- this collection can be extended by importing it into postman and adding new requests\n- the current collection has been successfully performed at least once with actual tokens and IDs\n\n\nAny requests in this collection which perform Searchrequests like \"get all...\"\" follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**\": asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**\": will return a total of x results\", for example: 100\n- **filter**\": (OPTIONAL) Filter object for more complex filter operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login + register",
			"item": [
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"example@mail\", \"displayName\": \"Muster\", \"password\": \"123\", \"passwordRepeat\": \"123\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "the body of this request contains an example to register a new user. "
					},
					"response": []
				},
				{
					"name": "valid login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e3a70ad-58d4-478e-8be1-3fea60df23ca",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"auth-token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"a\", \"password\": \"a\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/auth/login?=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4200/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "- no token necessary for these requests\n- one can receive the user-token by performing the valid login-request"
		},
		{
			"name": "group",
			"item": [
				{
					"name": "create group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth-token}}",
								"description": "insert token you received from login in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"test\", \"description\": \"test test\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/auth/group",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"group"
							]
						},
						"description": "return created group, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth-token}}",
								"description": "insert token you received from login in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\", \"description\": \"string}"
						},
						"url": {
							"raw": "http://localhost:80/api/auth/group/{{groupId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"group",
								"{{groupId}}"
							]
						},
						"description": "returns modified group, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{auth-token}}",
								"description": "insert token you received from login in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/auth/group/{{groupId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"group",
								"{{groupId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the user or auth- token, you received in login, in the authorization-variable\n- for modify and delete-requests, a groupID can be received by creating a group",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3f6ddb83-6981-416a-bc2d-fcb1fa4e8251",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f7ee9030-c1e4-42dc-bfa3-f56185b4fefc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "project",
			"item": [
				{
					"name": "create project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc1N5c3RlbUFkbWluIjpmYWxzZSwidWlkIjoiNjZhNGI0ZjQtODdhOC00MmZiLWJmNjAtZWZhMzE0M2I0MzRmIiwiZGlzcGxheU5hbWUiOiJIZXJiZXJ0IiwidHlwZSI6ImxvbmciLCJleHAiOjE1NjIyMzIzNjZ9.xF91jujCIwkKXYceORUiZebdKE0giFtTZXwGo6C3f7CCTZMd-lDDFtEWWKNMZywrVylNJr3OI7T2_SlTq4ulow",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"test\", \"referenceNumber\": \"445\", \"description\": \"test test\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/auth/project/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get project",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc1N5c3RlbUFkbWluIjpmYWxzZSwidWlkIjoiNjZhNGI0ZjQtODdhOC00MmZiLWJmNjAtZWZhMzE0M2I0MzRmIiwiZGlzcGxheU5hbWUiOiJIZXJiZXJ0IiwidHlwZSI6ImxvbmciLCJleHAiOjE1NjIyMzIzNjZ9.xF91jujCIwkKXYceORUiZebdKE0giFtTZXwGo6C3f7CCTZMd-lDDFtEWWKNMZywrVylNJr3OI7T2_SlTq4ulow",
								"type": "text"
							},
							{
								"key": "projectid",
								"value": "b7dc328c-56cf-41e8-9a24-f81235440ac3",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/auth/project/{{projectid}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"project",
								"{{projectid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get project token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "692f5f32-af4f-4eb0-ba80-d3f1c3b0bb2b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"project-token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"projectId\": \"c1e172da-5aba-4737-a96f-86d97eadc154\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/auth/project-token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"project-token"
							]
						},
						"description": "for authorization to test in \"api/project\" further\nafter creating a project, use the ID to create a project token\n\nfor easier use, add an environment for the whole testing to avoid constant copy pasting in Authorization.\nThe test script catches the token and saves it in the variable **{{project-token}}**"
					},
					"response": []
				},
				{
					"name": "edit project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc1N5c3RlbUFkbWluIjpmYWxzZSwidWlkIjoiNjZhNGI0ZjQtODdhOC00MmZiLWJmNjAtZWZhMzE0M2I0MzRmIiwiZGlzcGxheU5hbWUiOiJIZXJiZXJ0IiwidHlwZSI6ImxvbmciLCJleHAiOjE1NjIyMzIzNjZ9.xF91jujCIwkKXYceORUiZebdKE0giFtTZXwGo6C3f7CCTZMd-lDDFtEWWKNMZywrVylNJr3OI7T2_SlTq4ulow",
								"type": "text"
							},
							{
								"key": "projectId",
								"value": "b7dc328c-56cf-41e8-9a24-f81235440ac3",
								"type": "text"
							},
							{
								"key": "groupId",
								"value": "66a4b4f4-87a8-42fb-bf60-efa3143b434f",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"habla\", \"description\": \"espagnol\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/auth/project/{{projectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"project",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{auth-token}}",
								"description": "insert token you received from login in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/auth/project/{{projectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"auth",
								"project",
								"{{projectId}}"
							]
						},
						"description": "replace token in url with existing projectId to succesfully delete a project again"
					},
					"response": []
				}
			],
			"description": "- these requests need the user or auth- token, you received in login, in the authorization-variable\n- for modify and delete-requests, a projectID can be received by creating a project\n- project-token which is neccessary for the rest of the requests in the collection can be found in there",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e7461701-d8c7-4304-8ace-0368bb81837e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "660333da-3287-427f-9b1a-9909ae9cd60b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "system description",
			"item": [
				{
					"name": "create a system description",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"description\": \"testing example\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-description",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-description"
							]
						},
						"description": "returns system description, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get system description",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-description",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-description"
							]
						},
						"description": "returns system description, if carried successfully"
					},
					"response": []
				},
				{
					"name": "edit system description",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"description\": \"example was modified\" }"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-description",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-description"
							]
						},
						"description": "returns modified system-description, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete system description",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-description",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-description"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "85791f7e-2d2a-4914-afb1-4d8bac63095c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "91447390-9a10-49af-b57e-cdb3cf9c4b57",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "loss",
			"item": [
				{
					"name": "create loss",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"test-loss\", \"description\": \"example\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss"
							]
						},
						"description": "returns created loss, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get loss by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss/{{lossId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss",
								"{{lossId}}"
							]
						},
						"description": "returns searched loss, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify loss",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"loss\", \"description\": \"successfully modified\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{project}}/loss/{{lossId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{project}}",
								"loss",
								"{{lossId}}"
							]
						},
						"description": "returns modified loss, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all losses",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss",
								"search"
							]
						},
						"description": "returns all losses defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete loss",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss/{{lossId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss",
								"{{lossId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get Hazard by lossId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"from\": 0,\n  \"amount\": 100\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss/{{lossId}}/hazards",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss",
								"{{lossId}}",
								"hazards"
							]
						},
						"description": "This requests will show an array of the linked Hazards to the lossId"
					},
					"response": []
				},
				{
					"name": "link loss and hazard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss/{{lossId}}/link/hazard/{{hazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss",
								"{{lossId}}",
								"link",
								"hazard",
								"{{hazardId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete link between loss and hazard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss/{{lossId}}/link/hazard/{{hazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss",
								"{{lossId}}",
								"link",
								"hazard",
								"{{hazardId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to perform any Hazard related requests, the user has to create a hazard first to successfully perform them with valid HazardIds and lossIds\n\n\nLossRequestDTO's properties\n- **projectId**: \"id of project\"\n- **name**: name of entity\"\n- **description**: describes entity\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection** : asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount** : will return a total of x results\", for example: 100\n- **filter** : (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "545c0516-5f3b-4485-a96a-4b54da1790e9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8366657e-d946-4e54-a4d5-87b2cb6c39a7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "hazard",
			"item": [
				{
					"name": "create Hazard",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard"
							]
						},
						"description": "returns created Hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get Hazard by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								""
							]
						},
						"description": "returns seached hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify hazard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"description\": \"modified text\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								""
							]
						},
						"description": "returns modified hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete hazard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								""
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "link hazard with loss",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/link/loss/{{lossId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"link",
								"loss",
								"{{lossId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete link between hazard and loss",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/link/loss/{{lossId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"link",
								"loss",
								"{{lossId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "link hazard with system constraint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/link/system-constraint/{{systemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"link",
								"system-constraint",
								"{{systemConstraintId}}"
							]
						},
						"description": "returns linked hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete link between hazard and system-constraint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/link/system-constraint/{{systemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"link",
								"system-constraint",
								"{{systemConstraintId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get loss by hazardId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"from\": 0 , \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/losses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"losses"
							]
						},
						"description": "returns losses linked to hazardId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get system-constraints by hazardId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"from\": 0 , \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/system-constraints",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"system-constraints"
							]
						},
						"description": "returns system-constrainst linked to hazardId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all hazards",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {},\n    \"orderBy\": \"string\",\n    \"orderDirection\": \"asc\",\n    \"from\": 0,\n    \"amount\": 100\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"search"
							]
						},
						"description": "returns all hazards, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get hazard by UcaId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \n    \"from\": 0,\n    \"amount\": 100\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/a{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}/link/hazard",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"a{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}",
								"link",
								"hazard"
							]
						},
						"description": "returns hazards linked to UCAid, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to perform any system-constraint-, UCA- or loss- related requests, the user has to create a system-constraint, a UCA and loss first to successfully perform them with valid Ids\n\nHazardRequestDTO's properties\n- **projectId**: \"id of project\"\n- **name**: name of entity\"\n- **description**: describes entity\n\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection** : asc or desc, for example\": \"asc\"\n- **from** : this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount** : will return a total of x results\", for example: 100\n- **filter** : (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6db0b408-9dc9-44a7-8edb-e949b6f33050",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0872e821-bc3d-4ee2-bea6-7608691a2cee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "lock",
			"item": [
				{
					"name": "lock project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\": \"string\", \"parentId\":\"string\", \"entityName\":\"string\", \"expirationDate\":\"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/lock",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"lock"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "unlock project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\": \"string\", \"parentId\":\"string\", \"entityName\":\"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/unlock",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"unlock"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				}
			],
			"description": "How to perform a LockRequest:\nBody can contain:\n- **parentId**: the parentId property is only necessary if entity has parents e.g. subHazard, subSystemConstraint, uca, controllerConstraint, responsibility...\n- **Id**: id of entity to lock\n- **expirationTime**: timestamp can be calculated with:  `let expTime = new Date(date.getTime() + (expiresInMin * 60 * 1000)).toISOString();` **However, this code won't work in Postman automatically and only manually.**\n- **entityName**: predefined entity name which are defined in `xstampp-common/src/.../common/utils/EntityNameConstant.java`. **Example** could be loss, hazard, responsibility etc.\n\n\nHow to perform a UnockRequest:\nThe body only consists of Id, entityName and possibly parentId",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7063b49c-baf5-4254-9f03-db98bf256d79",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7f61fdfa-0268-41ab-ac81-83383f8b0172",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "system-constraints",
			"item": [
				{
					"name": "create safety constraints",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"safety3\",\n  \"description\": \"test\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint"
							]
						},
						"description": "returns created safety constraints, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get safety constraints by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}"
							]
						},
						"description": "returns searched safety constraints, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify safety contraint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiI2NmE0YjRmNC04N2E4LTQyZmItYmY2MC1lZmEzMTQzYjQzNGYiLCJyb2xlIjoiR1JPVVBfQURNSU4iLCJkaXNwbGF5TmFtZSI6IkhlcmJlcnQiLCJ0eXBlIjoibG9uZyIsImV4cCI6MTU2MjA1OTU1MiwicHJvamVjdElkIjoiYTMxY2I5MDUtMWQ5Zi00NTQ0LWJjN2MtMGFiMTBiNmE4NzVkIn0.l3sfSPQOYWVkHAuN0TR8doO1ftp-_VRD3pkjzNbOSKxn7xu-dUfBUrujt-cxCuxtQEPmDPtlDamG23ep6Gxgdg",
								"description": "project token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"safety4\",\n  \"description\": \"modified\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}"
							]
						},
						"description": "returns modified safety constraint, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete system constraint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all safety constraints",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"search"
							]
						},
						"description": "returns all safety constraints, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "link system constraint with hazard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/link/hazard/{{hazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"link",
								"hazard",
								"{{hazardId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete link between system constraint and Hazard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/link/hazard/{{hazardId}}/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"link",
								"hazard",
								"{{hazardId}}",
								""
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "link responsibilities to system constraints",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/{{responsibilityId}}/systemconstraints",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"{{responsibilityId}}",
								"systemconstraints"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get hazards by system constraintsId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/hazards",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"hazards"
							]
						},
						"description": "returns hazard linked to systemconstraintsId, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to perform any responsibility-, hazard-  related requests, the user has to create a hazard  and a responsibility first to successfully perform them with valid Ids\n\nSystemConstraintRequestDTO's properties\n- **projectId**: id of project\n- **name**: name of entity\n- **description**: describes entity\n\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "89bd1986-92f9-4251-b99c-29b749ec4be8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cdf04bb4-75a2-4ff0-bb7f-53aacad257a9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "control action",
			"item": [
				{
					"name": "create control action",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n  \"name\": \"CA\",\n  \"description\": \"hubabbaba\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								""
							]
						},
						"description": "return created control action, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify control action",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n\n  \"description\": \"text is modified\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controlActionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controlActionId}}"
							]
						},
						"description": "returns modified control action, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete control-action",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controlActionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controlActionId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get control action by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controlActionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controlActionId}}"
							]
						},
						"description": "once succesful, it will return the content of the control action"
					},
					"response": []
				},
				{
					"name": "get all control action",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"search"
							]
						},
						"description": "returns all control actions, defined by the http-body"
					},
					"response": []
				},
				{
					"name": "get control action by arrowId",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns control action linked with arrowId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "set ArrowId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controlActionId}}/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controlActionId}}",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns modified arrow, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an arrowId, the action can only performed by manually getting it through creating arrows in the site, the person is locally testing on\n\n\nAny requests related to arrows:\n**ArrowRelatedEntityRequestDTO**:\nSummary of all control structure entities which are linked to boxes e.g. the 3 types of ControlActionRequestDTO, InputRequestDTO, OutputRequestDTO\n\n- **id**: id of a ControlStructure entity\n- **projectId**:id of project\n- **name**:name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations\n\n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8b42cad8-0c4e-4873-a2d2-4dc98a01dbce",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1a5a410c-b7e7-469a-a5f7-430b288a0594",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "process variable",
			"item": [
				{
					"name": "create process variable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiI4NjEwNDFlZi02NjQ2LTRhMTgtYThhNy1iZjI1ZTAzN2RiNDgiLCJyb2xlIjoiR1JPVVBfQURNSU4iLCJkaXNwbGF5TmFtZSI6InQiLCJ0eXBlIjoibG9uZyIsImV4cCI6MTU2NDQyNDY3NSwicHJvamVjdElkIjoiN2QzODRjZDgtNGUwMC00NmY4LWI5MTItNzM2NzY1YjcyNjIyIn0.wlPJt-quIPdIkbTh1Kk_zxj5t4D5LtfD8UBkyf1j4dulSoAWGR3ovWShF__kFBPBlRaaG1TjWRl_O_SydZ08RQ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentprocessModel\": 2,\n  \"description\": \"string\",\n  \"id\": \"\",\n  \"last_edited\": 1564215064865\n  \"last_editor_displayname\": \"t\"\n  \"name\": \"PV2\",\n  \"process_models\": [2],\n  \"projectid\": \"{{projectId}}\",\n  \"responsibilityIds\": [1],\n  \"source\": {\"boxType\" : \"Controller\",\n  \"height\" : 100,\n  \"id\" : \"I-ecfb604e-e8b7-4b92-a70d-a484962828ce\",\n  \"name\": \"C1\",\n  \"parent\": \"null\",\n  \"projectid\": \"{{projectId}}\",\n  \"width\": 200,\n  \"x\": 789,\n  \"y\": 348\n  },\n  \"variable_type\": \"indiscreet\",\n  \"variable_value\": \"IV2\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api{{projectId}}/process-variable/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api{{projectId}}",
								"process-variable",
								""
							]
						},
						"description": "returns created process variable, if carried successfully"
					},
					"response": []
				},
				{
					"name": "create discreet variable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiI4NjEwNDFlZi02NjQ2LTRhMTgtYThhNy1iZjI1ZTAzN2RiNDgiLCJyb2xlIjoiR1JPVVBfQURNSU4iLCJkaXNwbGF5TmFtZSI6InQiLCJ0eXBlIjoibG9uZyIsImV4cCI6MTU2NDQyNTUxOCwicHJvamVjdElkIjoiN2QzODRjZDgtNGUwMC00NmY4LWI5MTItNzM2NzY1YjcyNjIyIn0.-ZekbOCFQYyNyuNfNBJwh8TOWhOn6kWuQ_n1CfUmyGSbxwvzoFmk1DzEzSFbbPlUn7BbYduBagH-aj_dWGRbUw",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 2,\n    \"projectId\": \"7d384cd8-4e00-46f8-b912-736765b72622\",\n    \"name\": \"PV3\",\n    \"description\": \"\",\n    \"source\": {\n        \"id\": \"0dd05e31-17a6-4339-9ce0-33d3ecb9b421\",\n        \"parent\": null,\n        \"name\": \"C1\",\n        \"projectId\": \"7d384cd8-4e00-46f8-b912-736765b72622\",\n        \"boxType\": \"Controller\",\n        \"x\": 1457,\n        \"y\": 209,\n        \"width\": 200,\n        \"height\": 100\n    },\n    \"variable_type\": \"DISCREET\",\n    \"variable_value\": \"Kekse\",\n    \"currentProcessModel\": 1,\n    \"process_models\": [\n        1\n    ],\n    \"valueStates\": [\n        \"Kekse\"\n    ],\n    \"responsibilityIds\": [\n        1\n    ],\n    \"last_edited\": 1564421878284,\n    \"last_editor_displayname\": \"t\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}/process-variable/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}",
								"process-variable",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "modify process variable",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectid\": \"\",\n  \"source\": \"box\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"variable_type\": \"string\",\n  \"variable_value\": \"string\",\n  \"process_models\": [],\n  \"valueStates\": [],\n  \"responsibilityIds\": [],\n  \"last_edited\": \"string\",\n  \"last_editor_displayname\": \"tom\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-variable/{{processVariableId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-variable",
								"{{processVariableId}}"
							]
						},
						"description": "returns modified process variable, if successfully carried\n"
					},
					"response": []
				},
				{
					"name": "delete process variable",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-variable/{{processVariableId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-variable",
								"{{processVariableId}}"
							]
						},
						"description": "returns the value \"SUCCESS\" or \"ERROR\""
					},
					"response": []
				},
				{
					"name": "get process variable by process model and source box",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiI4NjEwNDFlZi02NjQ2LTRhMTgtYThhNy1iZjI1ZTAzN2RiNDgiLCJyb2xlIjoiR1JPVVBfQURNSU4iLCJkaXNwbGF5TmFtZSI6InQiLCJ0eXBlIjoibG9uZyIsImV4cCI6MTU2NDQyNTUxOCwicHJvamVjdElkIjoiN2QzODRjZDgtNGUwMC00NmY4LWI5MTItNzM2NzY1YjcyNjIyIn0.-ZekbOCFQYyNyuNfNBJwh8TOWhOn6kWuQ_n1CfUmyGSbxwvzoFmk1DzEzSFbbPlUn7BbYduBagH-aj_dWGRbUw",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-model/{{controllerId}}/process-variable/source/{{boxsource}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-model",
								"{{controllerId}}",
								"process-variable",
								"source",
								"{{boxsource}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get process variable by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiI4NjEwNDFlZi02NjQ2LTRhMTgtYThhNy1iZjI1ZTAzN2RiNDgiLCJyb2xlIjoiR1JPVVBfQURNSU4iLCJkaXNwbGF5TmFtZSI6InQiLCJ0eXBlIjoibG9uZyIsImV4cCI6MTU2NDQyNjIwMSwicHJvamVjdElkIjoiN2QzODRjZDgtNGUwMC00NmY4LWI5MTItNzM2NzY1YjcyNjIyIn0.89-l9oAO6Msnb2qKRqTIgj1VBTzwpXqu4MhRl6BuUSivzOSaxwTxJ6JJemeRf2Z0Ec81dCxP0Iz5ujbWHzE_PA",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-model/{{process-model}}/process-variable/{{process-variableId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-model",
								"{{process-model}}",
								"process-variable",
								"{{process-variableId}}"
							]
						},
						"description": "returns searched process variable, if carried succesfully (200OK)"
					},
					"response": []
				},
				{
					"name": "get all process variable",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiI1ODRkYjI1NS0zMjA5LTRkMTYtOWRkZC1lNjM1ZWFiMDgwMTQiLCJyb2xlIjoiR1JPVVBfQURNSU4iLCJkaXNwbGF5TmFtZSI6InQiLCJ0eXBlIjoibG9uZyIsImV4cCI6MTU2NDQzMDE2MywicHJvamVjdElkIjoiMWM1YTMyYTAtYjFjYS00NzE4LTlhYWQtNDIxMjM2NzcxMzM0In0.fgUaqLqtprpZU5ApLk0epl88buZRELT1cbNgVscYJrSuz2K5ms8AmYptnhmJ3cb7--QcjuAUqRBswKyf36assQ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-variables/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-variables",
								"all"
							]
						},
						"description": "returns all process variable, defined by the http-body"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an BoxId, the action can only performed by manually getting it through creating boxes in the site, the person is currently locally testing on\n\n\nBox related requests' properties:\n- Summary of all control structure entities which are linked to boxes e.g. the 6 types of ActuatorRequestDTO, SensorRequestDTO, ControllerRequestDTO, ControlledProcessRequestDTO,ControlAlgorithmRequestDTO, ProcessVariableRequestDTO\n- **id**: id of a ControlStructure entity\n- **projectId**: id of project\n- **name**: name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "71391293-e7ff-4451-ba73-4426b216d1ed",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "99994e7e-4dfa-4f3c-b1ca-bf38048993d6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "process model",
			"item": [
				{
					"name": "create process model",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectid\": \"\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"controllerId\": int\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-model/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-model",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "alter process-model",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": int\n  \"projectid\": \"\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"controllerId\": int\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-model/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-model",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delete process model",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-model/{{process-model}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-model",
								"{{process-model}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all processmodels for controller",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-model/all/controllerId/{{controllerId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-model",
								"all",
								"controllerId",
								"{{controllerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get process model",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/process-model/{{process-model}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"process-model",
								"{{process-model}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to perform any controller related requests, a controllerId is neccessary beforehand\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "84970a5c-75fa-4acb-9d99-ef6bb7d2b154",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "42b5b05f-d975-400f-8d8b-966772eeafe7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "output",
			"item": [
				{
					"name": "create output",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/output/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"output",
								""
							]
						},
						"description": "returns created output"
					},
					"response": []
				},
				{
					"name": "modify output",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/output/{{outputId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"output",
								"{{outputId}}"
							]
						},
						"description": "returns modified output, if carried succesfully"
					},
					"response": []
				},
				{
					"name": "delete output",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/output/{{outputId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"output",
								"{{outputId}}"
							]
						},
						"description": "if succesfully deleted it returns the message \"SUCCESS\", else \"ERROR\""
					},
					"response": []
				},
				{
					"name": "get output by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/output/{{outputId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"output",
								"{{outputId}}"
							]
						},
						"description": "returns searched output information, if carried succesfully(200OK)"
					},
					"response": []
				},
				{
					"name": "get all output",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/output/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"output",
								"search"
							]
						},
						"description": "returns all output, defined by the http-body"
					},
					"response": []
				},
				{
					"name": "get output by arrowId",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/output/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"output",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns all outputs connected by the arrowID, if carried successfully"
					},
					"response": []
				},
				{
					"name": "set arrowId with output",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/output/{{outputId}}/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"output",
								"{{outputId}}",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns modified arrow, if carried succesfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an arrowId, the action can only performed by manually getting it through creating arrows in the site, the person is currently locally testing on\n\n\nThe body can contains:\n- **id**: id of a ControlStructure entity\n- **projectId**:id of project\n- **name**:name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\nAny requests related to arrows:\n**ArrowRelatedEntityRequestDTO**:\nSummary of all control structure entities which are linked to boxes e.g. the 3 types of ControlActionRequestDTO, InputRequestDTO, OutputRequestDTO\n\n- **id**: id of a ControlStructure entity\n- **projectId**:id of project\n- **name**:name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c771c754-4e35-49c0-b3d6-b6ff665c348b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ac232612-b49e-42dc-ad90-0899785136d3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "feedback",
			"item": [
				{
					"name": "create feedback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/feedback/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"feedback",
								""
							]
						},
						"description": "returns created feedback, if carried successfully"
					},
					"response": []
				},
				{
					"name": "set arrowId with feedback",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/feedback/{{feedbackId}}/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"feedback",
								"{{feedbackId}}",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns modified arrow, if carried succcessfully"
					},
					"response": []
				},
				{
					"name": "get feedback",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/feedback/{{feedbackId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"feedback",
								"{{feedbackId}}"
							]
						},
						"description": "returns searched feedback, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete feedback",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/feedback/{{feedbackId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"feedback",
								"{{feedbackId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify feedback",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/feedback/{{feedbackId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"feedback",
								"{{feedbackId}}"
							]
						},
						"description": "returns modified feedback, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get feedback by arrowId",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/feedback/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"feedback",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns all feedbacks connected to arrowId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all feedback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/feedback/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"feedback",
								"search"
							]
						},
						"description": "returns all feedbacks, defined by the HTTP-Body, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an arrowId, the action can only performed by manually getting it through creating arrows in the site, the person is currently locally testing on, and then loading the control-structure request to receive the id\n- Feedback usually have a processVariable additionaly\n\nThe body can contains:\n- **id**: id of a ControlStructure entity\n- **projectId**:id of project\n- **processVariableId**\":id of a linked Process variable\n- **name**:name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\nAny requests related to arrows:\n**ArrowRelatedEntityRequestDTO**:\nSummary of all control structure entities which are linked to boxes e.g. the 3 types of ControlActionRequestDTO, InputRequestDTO, OutputRequestDTO\n\n- **id**: id of a ControlStructure entity\n- **projectId**:id of project\n- **name**:name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f7e351c4-23f8-4f86-95b6-ca8d77687f59",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "53d3fd20-3bf4-4eeb-889d-63accf8d02ce",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "input",
			"item": [
				{
					"name": "create input",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/input/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"input",
								""
							]
						},
						"description": "returns created input, if carried succesfully"
					},
					"response": []
				},
				{
					"name": "modify input",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/input/{{inputId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"input",
								"{{inputId}}"
							]
						},
						"description": "returns modified input, if carried succesfully"
					},
					"response": []
				},
				{
					"name": "delete input",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/input/{{intputId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"input",
								"{{intputId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get input Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/input/{{inputId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"input",
								"{{inputId}}"
							]
						},
						"description": "returns seached input, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all inputs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/input/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"input",
								"search"
							]
						},
						"description": "returns all inputs defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get input by arrowId",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/input/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"input",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns all inputs connected to the arrowId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "set arrowId with input",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/input/{{inputId}}/arrow/{{arrowId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"input",
								"{{inputId}}",
								"arrow",
								"{{arrowId}}"
							]
						},
						"description": "returns modified arrow, with connection to input"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an arrowId, the action can only performed by manually getting it through creating arrows in the site, the person is currently locally testing on\n\n\nAny requests related to arrows:\n**ArrowRelatedEntityRequestDTO**:\nSummary of all control structure entities which are linked to boxes e.g. the 3 types of ControlActionRequestDTO, InputRequestDTO, OutputRequestDTO\n\n- **id**: id of a ControlStructure entity\n- **projectId**:id of project\n- **name**:name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "60112d77-23af-466a-b373-bdf0fa16e18f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fea58167-ee46-40ea-87a5-93ded10e29e2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "controller",
			"item": [
				{
					"name": "create controller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller"
							]
						},
						"description": "returns created controller, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify controller",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}"
							]
						},
						"description": "returns modified controller, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete  controller",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get controller by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}"
							]
						},
						"description": "returns searched controller, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all controller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"search"
							]
						},
						"description": "returns all controller, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get controller by boxId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"box",
								"{{boxId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get controller by responsibilityId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/{{responsibilityId}}/controller",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"{{responsibilityId}}",
								"controller"
							]
						},
						"description": "returns controller connected to the responsibilityId, if successfully carried"
					},
					"response": []
				},
				{
					"name": "set boxId with controller",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"box",
								"{{boxId}}"
							]
						},
						"description": "returns modified box with connection to controller, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an boxId, the action can only performed by manually getting it through creating boxes in the site, the person is currently locally testing on\n- for any responsibility related request, the user has to create one beforehand to get a valid Id\n\n\nBox related requests' properties:\n- Summary of all control structure entities which are linked to boxes e.g. the 6 types of ActuatorRequestDTO, SensorRequestDTO, ControllerRequestDTO, ControlledProcessRequestDTO,ControlAlgorithmRequestDTO, ProcessVariableRequestDTO\n- **id**: id of a ControlStructure entity\n- **projectId**: id of project\n- **name**: name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\n\nAny requests who perform Searchrequests like get all follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "31820cf2-71c3-4032-9fb2-fc8d106aa7df",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "14e3abb7-b840-4085-851c-18fbb8ee21ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "controlled process",
			"item": [
				{
					"name": "create controlled process",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controlled-process/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controlled-process",
								""
							]
						},
						"description": "returns created controlled process, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify controlled process",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controlled-process/{{controlledProcessId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controlled-process",
								"{{controlledProcessId}}"
							]
						},
						"description": "returns modified controlled process, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get controlled-process",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controlled-process/{{controlledProcessId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controlled-process",
								"{{controlledProcessId}}"
							]
						},
						"description": "returns searched controlled-process, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete controlled-process",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controlled-process/{{controlledProcessId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controlled-process",
								"{{controlledProcessId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all controlled-processes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controlled-process/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controlled-process",
								"search"
							]
						},
						"description": "returns all controlled-processes, defined by HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get controlled-process by boxId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controlled-process/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controlled-process",
								"box",
								"{{boxId}}"
							]
						},
						"description": "returns all the controlled-processes, connected to the boxId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "set boxId with controlled-process",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controlled-process/{{controlledProcessId}}/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controlled-process",
								"{{controlledProcessId}}",
								"box",
								"{{boxId}}"
							]
						},
						"description": "returns modified box, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an boxId, the action can only performed by manually getting it through creating boxes in the site, the person is currently locally testing on\n\nBox related requests' properties:\n- Summary of all control structure entities which are linked to boxes e.g. the 6 types of ActuatorRequestDTO, SensorRequestDTO, ControllerRequestDTO, ControlledProcessRequestDTO,ControlAlgorithmRequestDTO, ProcessVariableRequestDTO\n- **id**: id of a ControlStructure entity\n- **projectId**: id of project\n- **name**: name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\n\n\n\nAny requests who perform Searchrequests like \"get all...\"\" follow the following pattern:\n**SearchRequestDTO**: \nEach property from this entity is optional e.g.: \n                            {\"from\": 0, \"amount\": 75}, \n                            {\"amount\": 75} or just {} are all valid!\n- **orderBy** :attribute to order by e.g. id, name etc.\n- **oderDirection**: asc or desc, for example\": \"asc\"\n- **from**: this will skip the first x results, is usefull for pagination, for example \"0\"\n- **amount**: will return a total of x results\", for example: 100\n- **filter**: (OPTIONAL) Filter object for more complex filter operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5cc87c65-5105-4ba3-a771-f8266f5baec8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "32d78a67-3ff2-44b2-b20e-256ada8ed131",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "actuator",
			"item": [
				{
					"name": "create actuator",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								""
							]
						},
						"description": "returns created actuator, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify actuator",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}"
							]
						},
						"description": "returns modified actuator, if carried succcessfully"
					},
					"response": []
				},
				{
					"name": "get actuator by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}"
							]
						},
						"description": "returns searched actuator, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete actuator",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all actuator",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"search"
							]
						},
						"description": "returns all actuator, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "set boxId with actuator",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}",
								"box",
								"{{boxId}}"
							]
						},
						"description": "returns modified box, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get actuator by boxId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"box",
								"{{boxId}}"
							]
						},
						"description": "returns actuator connected to boxId, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an boxId, the action can only performed by manually getting it through creating boxes in the site, the person is currently locally testing on\n- \n\nBox related requests' properties:\n- Summary of all control structure entities which are linked to boxes e.g. the 6 types of ActuatorRequestDTO, SensorRequestDTO, ControllerRequestDTO, ControlledProcessRequestDTO,ControlAlgorithmRequestDTO, ProcessVariableRequestDTO\n- **id**: id of a ControlStructure entity\n- **projectId**: id of project\n- **name**: name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c8000464-e29d-4d2f-b564-13b2bde69519",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b40ec406-d260-4406-8cb8-2bf6ced99dcf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Sensor",
			"item": [
				{
					"name": "create sensor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/sensor/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"sensor",
								""
							]
						},
						"description": "returns created sensor, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/sensor/{{senorId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"sensor",
								"{{senorId}}"
							]
						},
						"description": "returns modified sensor, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/sensor/{sensorId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"sensor",
								"{sensorId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get sensor by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/sensor/{{sensorId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"sensor",
								"{{sensorId}}"
							]
						},
						"description": "returns searched sensor, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all sensor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/sensor/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"sensor",
								"search"
							]
						},
						"description": "returns all sensor, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get sensor by boxId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/sensor/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"sensor",
								"box",
								"{{boxId}}"
							]
						},
						"description": "returns sensors connected to the boxId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "set boxId with sensor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/sensor/{{sensorId}}/box/{{boxId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"sensor",
								"{{sensorId}}",
								"box",
								"{{boxId}}"
							]
						},
						"description": "returns modified box, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to receive an boxId, the action can only performed by manually getting it through creating boxes in the site, the person is currently locally testing on\n\n\nBox related requests' properties:\n- Summary of all control structure entities which are linked to boxes e.g. the 6 types of ActuatorRequestDTO, SensorRequestDTO, ControllerRequestDTO, ControlledProcessRequestDTO,ControlAlgorithmRequestDTO, ProcessVariableRequestDTO\n- **id**: id of a ControlStructure entity\n- **projectId**: id of project\n- **name**: name of a ControlStructure entity\n- **description**: description of a ControlStructure entity\n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d3ceedb3-6c2a-49bf-922d-5463fc7577f5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ee49617a-1ca4-4d63-a956-f28c2d1fd0c7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "responsibilities",
			"item": [
				{
					"name": "create responsibility",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								""
							]
						},
						"description": "returns created responsibility, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify responsibility",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/{{responsibilityId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"{{responsibilityId}}"
							]
						},
						"description": "returns modified responsibility, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete responsibility",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/{{responsibilityId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"{{responsibilityId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if successfully carried"
					},
					"response": []
				},
				{
					"name": "get responsibility by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/{{responsibilityId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"{{responsibilityId}}"
							]
						},
						"description": "returns searched responsibility, if carried successfully"
					},
					"response": []
				},
				{
					"name": "create Responsibility SC-Link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/{{responsibilityId}}/system-constraint/{{systemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"{{responsibilityId}}",
								"system-constraint",
								"{{systemConstraintId}}"
							]
						},
						"description": "returns \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete responsibility SC-Link",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/{{responsibilityId}}/system-constraint/{{systemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"{{responsibilityId}}",
								"system-constraint",
								"{{systemConstraintId}}"
							]
						},
						"description": "returns \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all responsibility",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"search"
							]
						},
						"description": "returns all responsibility, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all responsibility by controllerId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/controller/{{controllerId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"controller",
								"{{controllerId}}"
							]
						},
						"description": "returns all responsibilities connected to the controllerId, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get responsibilities by controller and systemconstraintID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \"systemConstraintId\": \"string\",\n  \"controllerId\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/system-constraint-and-controller",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"system-constraint-and-controller"
							]
						},
						"description": "returns  responsibilities connected to controller and systemconstraintID, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get responsibility filter preview",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \"systemConstraintId\": \"string\",\n  \"controllerId\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/responsibility/filter-preview/complete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"responsibility",
								"filter-preview",
								"complete"
							]
						},
						"description": "returns filter preview, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- for any system-constraints-, controller- related request, the user has to create one beforehand to get a valid Id\n\n\nResponsibilityRequestDTO' properties\n- **projectId**: \"id of project\"\n- **controllerId**\": id of parent controller, because each responsibility is linked to one controller\n- **name**: name of entity\"\n- **description**: describes entity\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "41c31744-aa59-4817-b662-3e5aca14202d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "41b1ccb1-1f05-4885-9789-fb321da68263",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "control-structure",
			"item": [
				{
					"name": "load control-structure",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-structure",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-structure"
							]
						},
						"description": "returns control structure  and its elements as an array, if carried correctly"
					},
					"response": []
				},
				{
					"name": "save root of control-structure",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"boxes\": \"string\",\n  \"arrows\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-structure",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-structure"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- this request is only useful with site on view of the control-structure\n\nproperties ControlStructureDTO:\n- **projectId**: id of project\n- **boxes**: string which represents a json which represents an array of boxes\n- **arrows**: string which represents a json which represents an array of arrows\n      \n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c3e4c5de-0b83-4449-97ff-bbe44a743bfd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "56bf1015-a8c5-4e4e-b971-e78695531cfd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "controller-constraint",
			"item": [
				{
					"name": "create controller-constraint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n\"name\": \"string\"\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controllerId}}/UCA/{{ucaId}}/controller-constraint/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controllerId}}",
								"UCA",
								"{{ucaId}}",
								"controller-constraint",
								""
							]
						},
						"description": "returns controller-constraint, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify controller-constraint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n\"name\": \"string\"\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controllerId}}/UCA/{{ucaId}}/controller-constraint/{{controllerConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controllerId}}",
								"UCA",
								"{{ucaId}}",
								"controller-constraint",
								"{{controllerConstraintId}}"
							]
						},
						"description": "returns modified controller-constraint, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete controller-constraint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controllerId}}/UCA/{{ucaId}}/controller-constraint/{{controllerConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controllerId}}",
								"UCA",
								"{{ucaId}}",
								"controller-constraint",
								"{{controllerConstraintId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get controller-constraint by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controllerId}}/UCA/{{ucaId}}/controller-constraint/{{controllerConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controllerId}}",
								"UCA",
								"{{ucaId}}",
								"controller-constraint",
								"{{controllerConstraintId}}"
							]
						},
						"description": "returns searched controller-constraint, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n\n\"ControllerConstraintRequestDTO, properties than can appear in the body\": {\n- **projectId**: id of project\n- **name**: name of entity\n- **description** : name of entity\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7d0bde65-121a-4075-9fbd-73d67c15b024",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ef198770-5ae5-4894-b2b5-63ea8b2a9b9f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "rule",
			"item": [
				{
					"name": "create rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}/rule",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}",
								"rule"
							]
						},
						"description": "returns created rule, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}/rule/{{ruleId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}",
								"rule",
								"{{ruleId}}"
							]
						},
						"description": "returns modified rule, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}/rule/{{ruleId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}",
								"rule",
								"{{ruleId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all rules",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/controller/{{controllerId}}/rule/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"controller",
								"{{controllerId}}",
								"rule",
								"search"
							]
						},
						"description": "returns all rules, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to create a rule its neccessary to create a controller beforehand",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b414e2a5-45f2-4e1f-a384-09e0b27f1c4f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "71149f37-097a-4bba-a96f-305b109846eb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "sub-hazard",
			"item": [
				{
					"name": "create sub-hazard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/sub-hazard",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"sub-hazard"
							]
						},
						"description": "returns created sub-hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get sub-hazard by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/sub-hazard/{{subhazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"sub-hazard",
								"{{subhazardId}}"
							]
						},
						"description": "returns searched sub-hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify sub-hazard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/sub-hazard/{{subhazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"sub-hazard",
								"{{subhazardId}}"
							]
						},
						"description": "returns modified sub-hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete sub-hazard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/sub-hazard/{{subhazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"sub-hazard",
								"{{subhazardId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all sub-hazards",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/sub-hazard/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"sub-hazard",
								"search"
							]
						},
						"description": "returns all sub-hazards, defined in the HTTP-Body"
					},
					"response": []
				},
				{
					"name": "get system-constraint by subhazardId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/hazard/{{hazardId}}/sub-hazard/{{subhazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"hazard",
								"{{hazardId}}",
								"sub-hazard",
								"{{subhazardId}}"
							]
						},
						"description": "returns system constraints, linked to sub-hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get hazards by UCAid",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/control-action/{{controlActionId}}/UCA/{{ucaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"control-action",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}"
							]
						},
						"description": "returns hazard linked to uca, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- for any UCA, system-constraints- related request, the user has to create one beforehand to get a valid Id\n\n\nSubHazardRequestDTO's properties\n- **projectId**: id of project\n- **name**: name of entity\n- **description**: describes entity",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "270df602-6e5d-402a-b27b-42cc428ab7c1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ebaaa2fe-03f6-4336-963a-bd6ff742f9cb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "sub-system-constraints",
			"item": [
				{
					"name": "create sub-system-constraint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/sub-system-constraint",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"sub-system-constraint"
							]
						},
						"description": "returns created sub-system-constraint, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify sub-system-constraint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"name\": \"string\",\n  \"description\": \"string\"\n}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/sub-system-constraint/{{subsystemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"sub-system-constraint",
								"{{subsystemConstraintId}}"
							]
						},
						"description": "returns modified sub-system-constraint, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get sub-system-constraint by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/sub-system-constraint/{{subsystemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"sub-system-constraint",
								"{{subsystemConstraintId}}"
							]
						},
						"description": "returns searched sub-system-constraint, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete sub-system-constraint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/sub-system-constraint/{{subsystemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"sub-system-constraint",
								"{{subsystemConstraintId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all sub-system-constraints",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint/{{systemConstraintId}}/sub-system-constraint/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint",
								"{{systemConstraintId}}",
								"sub-system-constraint",
								"search"
							]
						},
						"description": "returns all sub-system-constraints, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "create sub-hazard with sub-system-constraint Link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/sub-hazard/{{subHazardId}}/link/system-constraint/{{systemConstraintId}}/sub-system-constraint/{{subSystemConstraintId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"sub-hazard",
								"{{subHazardId}}",
								"link",
								"system-constraint",
								"{{systemConstraintId}}",
								"sub-system-constraint",
								"{{subSystemConstraintId}}"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete sub-hazard with sub-system-constraint Link",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/system-constraint",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"system-constraint"
							]
						},
						"description": "returns message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- for any system-constraint related request, the user has to create one beforehand to get a valid Id\n\n\nSubSystemConstraintRequestDTO's properties\n- **projectId**: id of project\n- **name**: name of entity\n- **description**: describes entity",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "74ac50be-f1af-49e1-a2ec-af20c5e4d6ad",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "de3f7d14-37a5-4e16-93f3-8192a8056a42",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "UCA",
			"item": [
				{
					"name": "create UCA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA"
							]
						},
						"description": "returns created UCA, if carried successfully"
					},
					"response": []
				},
				{
					"name": "modify UCA",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"string\",\n  \"description\": \"string\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}"
							]
						},
						"description": "returns modified UCA, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get UCA by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}"
							]
						},
						"description": "returns searched UCA, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete UCA",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" oder \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all UCAS",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCAs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCAs"
							]
						},
						"description": "returns all UCAs, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get all UCAs by types",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/type/UCAs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"type",
								"UCAs"
							]
						},
						"description": "returns all UCAs, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get UCAs count by Id and type",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"filter\": {},\n  \"orderBy\": \"string\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCAs/count",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCAs",
								"count"
							]
						},
						"description": "returns UCAs, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "link UCA with hazard",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}/link/hazard/{{hazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}",
								"link",
								"hazard",
								"{{hazardId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete link between UCA and hazard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}/link/hazard/{{hazardId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}",
								"link",
								"hazard",
								"{{hazardId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "link uca with sub-hazard",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}/link/hazard/{{hazardId}}/subHazard/{{subHazId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}",
								"link",
								"hazard",
								"{{hazardId}}",
								"subHazard",
								"{{subHazId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete link between uca and sub-hazard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/ControlAction/{{controlActionId}}/UCA/{{ucaId}}/link/hazard/{{hazardId}}/subHazard/{{subHazId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"ControlAction",
								"{{controlActionId}}",
								"UCA",
								"{{ucaId}}",
								"link",
								"hazard",
								"{{hazardId}}",
								"subHazard",
								"{{subHazId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "get UCA by hazardId",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/link/ControlAction/{{controlActionId}}/UCA",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"link",
								"ControlAction",
								"{{controlActionId}}",
								"UCA"
							]
						},
						"description": "returns UCAs linked to hazard, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get UCA by subhazard",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/hazard/{{hazardId}}/subHazard/{{subHazardId}}/link/ControlAction/{{controlActionId}}/UCA",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"hazard",
								"{{hazardId}}",
								"subHazard",
								"{{subHazardId}}",
								"link",
								"ControlAction",
								"{{controlActionId}}",
								"UCA"
							]
						},
						"description": "returns UCAs linked to sub-hazard, if carried successfully"
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- for any hazard, sub-hazard- related request, the user has to create one beforehand to get a valid Id\n- \nThe body can contain in creating UCAs\n- **projectId**: id of project\n- **name**:name of entity\n- **description**: describes  entity\n- **category**: category of UCAs currently as Enums: \n                         0: 'Provided'\n                         1: 'Not Provided'\n                         2: 'too early or too late:\n                         3: 'stopped too soon or applied too long'",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2310cd07-f6a3-470d-893b-fa60e6f716f2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "73db6991-2b76-4832-ad0e-6d3811d2f269",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "box",
			"item": [
				{
					"name": "get all boxes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiI2NmE0YjRmNC04N2E4LTQyZmItYmY2MC1lZmEzMTQzYjQzNGYiLCJyb2xlIjoiR1JPVVBfQURNSU4iLCJkaXNwbGF5TmFtZSI6IkhlcmJlcnQiLCJ0eXBlIjoibG9uZyIsImV4cCI6MTU2MjIzNjAyNCwicHJvamVjdElkIjoiYTMxY2I5MDUtMWQ5Zi00NTQ0LWJjN2MtMGFiMTBiNmE4NzVkIn0.jMqGtG3eAPjGwb8Fy3-mwm1ZerabX_b9JHuUG22uVdEo8FDV_MqTsTqhxzAuf4TWOwDplS6YQPvOE6wYm9Ojqg",
								"description": "project token",
								"type": "text"
							},
							{
								"key": "projectId",
								"value": "b7dc328c-56cf-41e8-9a24-f81235440ac3",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/box/input/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"box",
								"input",
								"search"
							]
						},
						"description": "returns an array of boxes, if carried successfully. \nIf no boxes exist, the return is blank."
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- to create boxes or get their Id, it's only manually possible to receive the information",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bf9eb591-bef0-4aa1-b1da-0adb127b0c1a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bfb8413c-875c-4622-a52a-1bc0e991cc2e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "loss-scenario",
			"item": [
				{
					"name": "create loss-scenario",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"loss-scenario\", \"description\": \"example\",\"headCategory\": 1, \"subCategory\": 2}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss-scenario",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss-scenario"
							]
						},
						"description": "returns created loss-scenario, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get Loss-Scenario",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss-scenario/{{lossScenarioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss-scenario",
								"{{lossScenarioId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "modify loss-scenario",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "Insert a valid project-token in value",
								"key": "Authorization",
								"type": "text",
								"value": "{{project-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"loss-scenario\", \"description\": \"example\",\"headCategory\": 1, \"subCategory\": 2}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss-scenario/{{lossScenarioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss-scenario",
								"{{lossScenarioId}}"
							]
						},
						"description": "returns modified loss-scenario, if carried successfully"
					},
					"response": []
				},
				{
					"name": "delete loss-scenario",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss-scenario/{{lossScenarioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss-scenario",
								"{{lossScenarioId}}"
							]
						},
						"description": "returns the message \"SUCCESS\" or \"ERROR\", if carried successfully"
					},
					"response": []
				},
				{
					"name": "search all loss-scenarios",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"description": "Insert a valid project-token in value",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"orderBy\": \"id\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 20}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss-scenario/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss-scenario",
								"search"
							]
						},
						"description": "returns all loss-scenarios, defined in the HTTP-Body, if carried successfully"
					},
					"response": []
				},
				{
					"name": "get Loss-Scenarios By Uca And CAId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/loss-scenario/control-action/{{controlActionId}}/uca/{{ucaId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"loss-scenario",
								"control-action",
								"{{controlActionId}}",
								"uca",
								"{{ucaId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "- these requests need the project-token, you received in performing get project-token-request, in the authorization-variable\n- its neccessary to create losses beforehand\n\n\nLossScenarioRequestDTO:\nneccessary:\n- String **projectId**\n- Integer **ucaId**\n- String **name**\n- String **description**\n- Integer **headCategory**\n- Integer **subCategory**\n\ncould be added:\n- Integer **controller1Id**\n- Integer **controller2Id**\n- Integer **controlAlgorithm**\n- String **description1**\n- String **description2**\n- String **description3**\n- Integer **controlActionId**\n- Integer **inputArrowId**\n- Integer **feedbackArrowId**\n- String **inputBoxId**\n- Integer **sensorId**\n- Integer **reason**",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "74a76106-9e07-4ba5-a4ca-2393bc82bc92",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ba7bdf1c-0a9a-42c0-a0ce-bd73f1e9c4bc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "conversion",
			"item": [
				{
					"name": "create Conversion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"controlActionId\": \"2\",\n  \"conversion\": \"x^2+1\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}/conversion",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}",
								"conversion"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit Conversion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"controlActionId\": \"2\",\n  \"conversion\": \"x^2+1\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}/conversion/{{conversionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}",
								"conversion",
								"{{conversionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Conversion",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}/conversion/{{conversionId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}",
								"conversion",
								"{{conversionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all Conversion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n  \"orderBy\": \"id\",\n  \"orderDirection\": \"asc\",\n  \"from\": 0,\n  \"amount\": 100}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/actuator/{{actuatorId}}/conversion/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"actuator",
								"{{actuatorId}}",
								"conversion",
								"search"
							]
						}
					},
					"response": []
				}
			],
			"description": "ConversionRequestDTO:\n- **controlActionId**: int\n- **projectId**: id of project, string\n- **conversion**: string, conversion of a rule (example: \"x^2+3\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2bf46f9b-69ef-4a47-93fc-80835c31d5b3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5608620a-d320-4bfe-b165-19ee443c06fa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Implementation-Constraint",
			"item": [
				{
					"name": "create Implementation-Constraint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"lossScenarioId\": \"1\",\n  \"name\": \"hhh\",\n  \"description\": \"example\",\n  \"controllerConstraint\": \"1\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/implementation-constraint",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"implementation-constraint"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Implementation-Constraint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/implementation-constraint/{{implConstId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"implementation-constraint",
								"{{implConstId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit Implementation-Constraint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"lossScenarioId\": \"1\",\n  \"name\": \"hhh\",\n  \"description\": \"example\",\n  \"controllerConstraint\": \"1\"}"
						},
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/implementation-constraint/{{implConstId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"implementation-constraint",
								"{{implConstId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Implementation-Constraint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/implementation-constraint/{{implConstId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"implementation-constraint",
								"{{implConstId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Implementation-Constraint by Loss-Scenario Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{project-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:80/api/project/{{projectId}}/implementation-constraint/loss-scenario/{{lossScenarioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "80",
							"path": [
								"api",
								"project",
								"{{projectId}}",
								"implementation-constraint",
								"loss-scenario",
								"{{lossScenarioId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "ImplementationConstraintRequestDTO:\n- **projectId**: string\n- **lossScenarioId**: string\n- **name**: string\n- **description**: string\n- **controllerConstraint**: string"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4fb330ef-02bd-4e4d-b828-f59a8b207abb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a6d585bd-e033-4a50-820b-ab41d4c36d84",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}